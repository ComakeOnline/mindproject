传输协议的库是libmindSdk.a，使用方法可以参考demo


视频传输：
只关系class Mindsdk_Video中的如下部分：
	static Mindsdk_Video* getInstance();
	static void start();//需要调用此函数启动
	static void(*cb_startVideo)(unsigned char chn);//用户需自己实现的开始播放视频的回调函数，chn参数是要开启的vi通道号
	static void(*cb_stopVideo)(unsigned char chn);//用户需要自己实现的停止播放视频的回调函数，chn参数是要停止的vi通道号
	static void (*cb_getNextViFrame)(unsigned char chn);//用户需要自己实现的获取下一帧的回调函数，读取数据帧后，需要调用insertViFrame插入进来，chn参数是要读取数据的vi通道号
	static void insertViFrame(void* data, int dataLen, bool isIFrame, const unsigned long long& pts, unsigned char chn = 0);//调用此函数插入vi数据，chn是视频所属通道号
	static void (*cb_changeBit)(uint32_t bit, unsigned char chn);//用户需要自己实现的修改视频码率的回调函数，chn参数是要调整帧率的vi通道号

	static void setCmdCallBack(void (*usersCmd_CB)(const unsigned char*, int));//设置用户自定义命令的处理回调函数，回调函数第一个参数是返回的数据，第二个参数是数据长度
	static void sendCmd(const unsigned char* cmd, int len);//发送自定义的命令给NVR

视频传输使用说明：
1、getInstance();获取对象指针；
2、设置cb_startVideo、cb_stopVideo、cb_getNextViFrame、cb_changeBit等回调函数，如果想实现处理自定义命令，
还需调用setCmdCallBack设置处理自定义命令的回调函数，可以支持二进制自定义命令数据；
3、当nvr请求打开码流的时候，会回调cb_startVideo，参数是要打开码流的通道号；
4、当要读取视频数据发送的时候，会回调cb_getNextViFrame，参数是要读取vi数据的通道号，
我们根据通道号读取相应通道的数据后，调用insertViFrame来把数据插入发送队列，insertViFrame最后一个参数是数据所属的vi通道号；
5、当nvr要停止某通道的vi数据，会回调cb_stopVideo，参数是要停止码流的通道号；
6、当接收到来自nvr的自定义命令时，会回调setCmdCallBack所设置的回调函数，回调参数参数一是自定义命令数据开始地址，参数二是数据长度，支持二进制数据；
7、如果我们想给nvr发送自定义命令，可以调用sendCmd，参数一是命令数据开始地址，参数二是数据长度，支持二进制数据；





音频传输：
static Mindsdk_Audio* getInstance();
	static void start();//需要调用此函数启动
	static void sendAudio(const unsigned char* data, int len);//发用户送音频数据给NVR
	static void (*cb_startAudio)();//用户自己实现的开始音频通话的回调
	static void (*cb_stopAudio)();//用户自己实现的结束音频通话的回调
	static void (*cb_recvAudio)(unsigned char* buf, unsigned short len);//用户自己实现的获取到音频数据的回调，接收到NVR发来的音频数据时调用传回数据给用户
	Mindsdk_Audio::sendAudio(const unsigned char* data, int len)用于发送音频数据到NVR

音频传输使用说明：
1、调用getInstance();获取对象指针；
2、设置回调cb_startAudio，当nvr请求语音通话时会被调用；
3、设置回调cb_stopAudio，当nvr请求停止语音通话时会被调用；
4、设置回调cb_recvAudio，当接收到来自nvr的音频数据时会被调用，参数一是音频数据地址，参数二是数据长度，音频数据格式取决于发送端的格式，
传输协议只赋值收发数据，不对数据做编解码处理；
5、发送音频数据可以调用sendAudio，参数分别为音频数据地址和数据长度；
6、Mindsdk_Audio类也有setCmdCallBack和sendCmd用于收发自定义数据，这个跟 Mindsdk_Video是一样的，用户最终使用任意一个类的即可。

