#include <stdio.h>
#include <unistd.h>
#include <string.h>
#include <poll.h>
#include <fcntl.h>
#include <stdlib.h>

#include<sys/mman.h>
#include<sys/types.h>
#include<sys/stat.h>

#include "mi_panel.h"
#include "mi_panel_datatype.h"

#define FLAG_DELAY            0xFE
#define FLAG_END_OF_TABLE     0xFF   // END OF REGISTERS MARKER

MI_PANEL_ParamConfig_t stPanelParam =
{
    "ILI9881D63_720x1280",    //const char *pPanelName; ///<  PanelName
    0,                    //MI_U8             MI_U8Dither;         ///<  Diether On?off
    E_MI_PNL_LINK_MIPI_DSI, //MIPnlLinkType_e eLinkType;     ///<  Panel LinkType

    1,        //MI_U8 MI_U8DualPort      :1;          ///<  DualPort on/off
    0,        //MI_U8 MI_U8SwapPort      :1;          ///<  Swap Port on/off
    0,        //MI_U8 MI_U8SwapOdd_ML    :1;          ///<  Swap Odd ML
    0,        //MI_U8 MI_U8SwapEven_ML   :1;          ///<  Swap Even ML
    0,        //MI_U8 MI_U8SwapOdd_RB    :1;          ///<  Swap Odd RB
    0,        //MI_U8 MI_U8SwapEven_RB   :1;          ///<  Swap Even RB

    1,        //MI_U8 MI_U8SwapLVDS_POL  :1;          ///<  Swap LVDS Channel Polairyt
    1,        //MI_U8 MI_U8SwapLVDS_CH   :1;          ///<  Swap LVDS channel
    0,        //MI_U8 MI_U8PDP10BIT      :1;          ///<  PDP 10bits on/off
    1,        //MI_U8 MI_U8LVDS_TI_MODE  :1;          ///<  Ti Mode On/Off


    0,        //MI_U8 MI_U8DCLKDelay;                 ///<  DCLK Delay
    0,        //MI_U8 MI_U8InvDCLK   :1;              ///<  CLK Invert
    0,        //MI_U8 MI_U8InvDE     :1;              ///<  DE Invert
    0,        //MI_U8 MI_U8InvHSync  :1;              ///<  HSync Invert
    0,        //MI_U8 MI_U8InvVSync  :1;              ///<  VSync Invert

    1,     //MI_U8 MI_U8DCKLCurrent;              ///< PANEL_DCLK_CURRENT
    1,     //MI_U8 MI_U8DECurrent;                ///< PANEL_DE_CURRENT
    1,     //MI_U8 MI_U8ODDDataCurrent;           ///< PANEL_ODD_DATA_CURRENT
    1,     //MI_U8 MI_U8EvenDataCurrent;          ///< PANEL_EVEN_DATA_CURRENT

    30,       //u16 u16OnTiming1;                ///<  time between panel & data while turn on power
    400,      //u16 u16OnTiming2;                ///<  time between data & back light while turn on power
    80,       //u16 u16OffTiming1;               ///<  time between back light & data while turn off power
    30,       //u16 u16OffTiming2;               ///<  time between data & panel while turn off power

    24,        //u16 u16HSyncWidth;               ///<  Hsync Width
    24,        //u16 u16HSyncBackPorch;           ///<  Hsync back porch

    4,       //u16 u16VSyncWidth;               ///<  Vsync width
    12,      //u16 u16VSyncBackPorch;           ///<  Vsync back porch

    48,       //u16 u16HStart;                   ///<  HDe start
    16,        //u16 u16VStart;                   ///<  VDe start
    720,      //u16 u16Width;                    ///<  Panel Width
    1280,     //u16 u16Height;                   ///<  Panel Height

    850,      //u16 u16MaxHTotal;                ///<  Max H Total
    788,      //u16 u16HTotal;                   ///<  H Total
    750,      //u16 u16MinHTotal;                ///<  Min H Total

    1750,     //u16 u16MaxVTotal;                ///<  Max V Total
    1311,     //u16 u16VTotal;                   ///<  V Total
    1550,     //u16 u16MinVTotal;                ///<  Min V Total

    89,       //u16 u16MaxDCLK;                  ///<  Max DCLK
    79,       //u16 u16DCLK;                     ///<  DCLK ( Htt * Vtt * Fps)
    69,       //u16 u16MinDCLK;                  ///<  Min DCLK

    15,    //u16 u16SpreadSpectrumStep;       ///<  Step of SSC
    191,    //u16 u16SpreadSpectrumSpan;       ///<  Span of SSC

    160,      //MI_U8 MI_U8DimmingCtl;                 ///<  Dimming Value
    255,      //MI_U8 MI_U8MaxPWMVal;                  ///<  Max Dimming Value
    80,      //MI_U8 MI_U8MinPWMVal;                  ///<  Min Dimming Value

    0,                            //MI_U8 MI_U8DeinterMode   :1;                  ///<  DeInter Mode
    E_MI_PNL_ASPECT_RATIO_WIDE, //MIPnlAspectRatio_e ePanelAspectRatio; ///<  Aspec Ratio

    0,                            //u16 u16LVDSTxSwapValue;         // LVDS Swap Value
    E_MI_PNL_TI_8BIT_MODE,      //MIPnlTiBitMode_e eTiBitMode;  // Ti Bit Mode
    E_MI_PNL_OUTPUT_8BIT_MODE, //MIPnlOutputFormatBitMode_e eOutputFormatBitMode;

    0,        //MI_U8 MI_U8SwapOdd_RG    :1;          ///<  Swap Odd RG
    0,        //MI_U8 MI_U8SwapEven_RG   :1;          ///<  Swap Even RG
    0,        //MI_U8 MI_U8SwapOdd_GB    :1;          ///<  Swap Odd GB
    0,        //MI_U8 MI_U8SwapEven_GB   :1;          ///<  Swap Even GB

    1,        //MI_U8 MI_U8DoubleClk     :1;                      ///<  Double CLK On/off
    0x1C848E, //u32 u32MaxSET;                              ///<  Max Lpll Set
    0x18EB59, //u32 u32MinSET;                              ///<  Min Lpll Set
    E_MI_PNL_CHG_VTOTAL, //MIPnlOutputTimingMode_e eOutTimingMode;   ///<  Define which panel output timing change mode is used to change VFreq for same panel
    0,                     //MI_U8 MI_U8NoiseDith     :1;                      ///<  Noise Dither On/Off
    E_MI_PNL_CH_SWAP_2,
    E_MI_PNL_CH_SWAP_4,
    E_MI_PNL_CH_SWAP_3,
    E_MI_PNL_CH_SWAP_1,
    E_MI_PNL_CH_SWAP_0,//H2->2 4 3 1 0
};
static MI_U8 ILI9881D_CMD[] ={
    0xFF,0x03,0x98,0x81,0x03,

//GIP_1

    0x01,0x01,0x00,
    0x02,0x01,0x00,
    0x03,0x01,0x73,
    0x04,0x01,0x00,
    0x05,0x01,0x00,
    0x06,0x01,0x0E,
    0x07,0x01,0x00,
    0x08,0x01,0x00,
    0x09,0x01,0x01,
    0x0a,0x01,0x01,
    0x0b,0x01,0x01,
    0x0c,0x01,0x01,
    0x0d,0x01,0x01,
    0x0e,0x01,0x01,
    0x0f,0x01,0x00,
    0x10,0x01,0x00, 
    0x11,0x01,0x00,
    0x12,0x01,0x00,
    0x13,0x01,0x00,
    0x14,0x01,0x00,
    0x15,0x01,0x00,
    0x16,0x01,0x00, 
    0x17,0x01,0x00, 
    0x18,0x01,0x00,
    0x19,0x01,0x00,
    0x1a,0x01,0x00,
    0x1b,0x01,0x00,
    0x1c,0x01,0x00,
    0x1d,0x01,0x00,
    0x1e,0x01,0x40,
    0x1f,0x01,0xC0,
    0x20,0x01,0x0A,
    0x21,0x01,0x05,
    0x22,0x01,0x00,
    0x23,0x01,0x00,
    0x24,0x01,0x00,
    0x25,0x01,0x00,
    0x26,0x01,0x00,
    0x27,0x01,0x00,
    0x28,0x01,0x33,
    0x29,0x01,0x03,
    0x2a,0x01,0x00,
    0x2b,0x01,0x00,
    0x2c,0x01,0x00,
    0x2d,0x01,0x00,
    0x2e,0x01,0x00,
    0x2f,0x01,0x00,
    0x30,0x01,0x00,
    0x31,0x01,0x00,
    0x32,0x01,0x00,
    0x33,0x01,0x00,
    0x34,0x01,0x00,
    0x35,0x01,0x00,
    0x36,0x01,0x00,
    0x37,0x01,0x00,
    0x38,0x01,0x00,
    0x39,0x01,0x35,
    0x3A,0x01,0x01,
    0x3B,0x01,0x40,
    0x3C,0x01,0x00,
    0x3D,0x01,0x01,
    0x3E,0x01,0x00,
    0x3F,0x01,0x00,
    0x40,0x01,0x35,
    0x41,0x01,0x88,
    0x42,0x01,0x00,
    0x43,0x01,0x40,  
    0x44,0x01,0x3F,     //1F TO 3F_ RESET KEEP LOW ALL GATE ON
    0x45,0x01,0x20,     //LVD觸發後ALL GATE ON 至VGH
    0x46,0x01,0x00,
                  
                  
//GIP_2           
    0x50,0x01,0x01,
    0x51,0x01,0x23,
    0x52,0x01,0x45,
    0x53,0x01,0x67,
    0x54,0x01,0x89,
    0x55,0x01,0xAB,
    0x56,0x01,0x01,
    0x57,0x01,0x23,
    0x58,0x01,0x45,
    0x59,0x01,0x67,
    0x5a,0x01,0x89,
    0x5b,0x01,0xAB,
    0x5c,0x01,0xCD,
    0x5d,0x01,0xEF,
                  
//GIP_3           
    0x5e,0x01,0x11,
                  
    0x5f,0x01,0x0c,
    0x60,0x01,0x0d,
    0x61,0x01,0x0e,
    0x62,0x01,0x0f,
    0x63,0x01,0x06,
    0x64,0x01,0x07,
    0x65,0x01,0x02,
    0x66,0x01,0x02,
    0x67,0x01,0x02,
    0x68,0x01,0x02,
    0x69,0x01,0x02,
    0x6a,0x01,0x02,
    0x6b,0x01,0x02,
    0x6c,0x01,0x02,
    0x6d,0x01,0x02,
    0x6e,0x01,0x02,
    0x6f,0x01,0x02,
    0x70,0x01,0x02,
    0x71,0x01,0x02,
    0x72,0x01,0x02,
    0x73,0x01,0x01,
    0x74,0x01,0x00,
                  
    0x75,0x01,0x0c,
    0x76,0x01,0x0d,
    0x77,0x01,0x0e,
    0x78,0x01,0x0f,
    0x79,0x01,0x06,
    0x7a,0x01,0x07,
    0x7b,0x01,0x02,
    0x7c,0x01,0x02,
    0x7d,0x01,0x02,
    0x7e,0x01,0x02,
    0x7f,0x01,0x02,
    0x80,0x01,0x02,
    0x81,0x01,0x02,
    0x82,0x01,0x02,
    0x83,0x01,0x02,
    0x84,0x01,0x02,
    0x85,0x01,0x02,
    0x86,0x01,0x02,
    0x87,0x01,0x02,
    0x88,0x01,0x02,
    0x89,0x01,0x01,
    0x8A,0x01,0x00,
                  
    0xFF,0x03,0x98,0x81,0x04,    
    0x68,0x01,0xDB,     //nonoverlap 18ns (VGH and VGL)
    0x6D,0x01,0x08,     //gvdd_isc[2:0]=0 (0.2uA) 可減少VREG1擾動
    0x70,0x01,0x00,     //VGH_MOD and VGH_DC CLKDIV disable
    0x71,0x01,0x00,     //VGL CLKDIV disable
    0x66,0x01,0x1E,     //VGH 4X
    0x3A,0x01,0x24,     //PS_EN OFF
    0x82,0x01,0x0A,     //VREF_VGH_MOD_CLPSEL 12V
    0x84,0x01,0x0A,     //VREF_VGH_CLPSEL 12V
    0x85,0x01,0x1D,     //VREF_VGL_CLPSEL 12V
    0x32,0x01,0xAC,     //開啟負channel的power saving
    0x8C,0x01,0x80,     //sleep out Vcom disable以避免Vcom source不同步enable導致玻璃微亮
    0x3C,0x01,0xF5,     //開啟Sample & Hold Function
    0x3A,0x01,0x24,     //PS_EN OFF       
    0xB5,0x01,0x02,     //GAMMA OP 
    0x31,0x01,0x25,     //SOURCE OP 
    0x88,0x01,0x33,     //VSP/VSN LVD Disable     
    0x38,0x01,0x01,  
    0x39,0x01,0x00, 

    0xFF,0x03,0x98,0x81,0x01,    
    0x22,0x01,0x0A,      
    0x31,0x01,0x00,     //column inversion     
    0x50,0x01,0x5C,     //VREG10UT 4.5  
    0x51,0x01,0x5C,     //VREG20UT -4.5
    0x53,0x01,0x65,     //VC0M1      
    0x55,0x01,0x68,     //VC0M2        
    0x60,0x01,0x2B,     //SDT      
    0x61,0x01,0x00,     //CR    
    0x62,0x01,0x19,     //EQ
    0x63,0x01,0x00,     //PC
                  
                  
//Pos Register    
                  
    0xA0,0x01,0x00,	
    0xA1,0x01,0x09,	
    0xA2,0x01,0x11,	
    0xA3,0x01,0x0E,	
    0xA4,0x01,0x16,	
    0xA5,0x01,0x1F,	
    0xA6,0x01,0x14,	
    0xA7,0x01,0x18,	
    0xA8,0x01,0x46,	
    0xA9,0x01,0x1C,	
    0xAA,0x01,0x28,	
    0xAB,0x01,0x3E,	
    0xAC,0x01,0x18,	
    0xAD,0x01,0x17,	
    0xAE,0x01,0x4C,	
    0xAF,0x01,0x22,	
    0xB0,0x01,0x28,	
    0xB1,0x01,0x43,	
    0xB2,0x01,0x64,	
    0xB3,0x01,0x39,	
                  
                  
//Neg Register    
    0xC0,0x01,0x00,	
    0xC1,0x01,0x09,	
    0xC2,0x01,0x11,	
    0xC3,0x01,0x0E,	
    0xC4,0x01,0x16,	
    0xC5,0x01,0x1F,	
    0xC6,0x01,0x14,	
    0xC7,0x01,0x18,	
    0xC8,0x01,0x46,	
    0xC9,0x01,0x1C,	
    0xCA,0x01,0x28,	
    0xCB,0x01,0x3E,	
    0xCC,0x01,0x18,	
    0xCD,0x01,0x17,	
    0xCE,0x01,0x4C,	
    0xCF,0x01,0x22,	
    0xD0,0x01,0x28,	
    0xD1,0x01,0x43,	
    0xD2,0x01,0x64,	
    0xD3,0x01,0x39,	
                  
    0xFF,0x03,0x98,0x81,0x00,

    0x35,0x01,0x00,
//  0x36, 1, 0x01, // vflip & hflip
//    0xcc, 1, 0x05,
    0x11, 1, 0x00,
    FLAG_DELAY, FLAG_DELAY, 120,
    0x29, 1, 0x00,
    FLAG_END_OF_TABLE, FLAG_END_OF_TABLE,
};


MI_PANEL_MipiDsiConfig_t stMipiDsiConfig =
{
    //HsTrail HsPrpr HsZero ClkHsPrpr ClkHsExit ClkTrail ClkZero ClkHsPost DaHsExit ContDet
    5,      3,     5,     10,       14,       3,       12,     10,       5,       0,
    //Lpx   TaGet  TaSure  TaGo
    16,   26,    24,     50,

    //Hac,  Hpw,  Hbp,  Hfp,  Vac,  Vpw, Vbp, Vfp,  Bllp, Fps
    720,  24,    24,   20,   1280, 4,   12, 15,  0,    60,

    E_MI_PNL_MIPI_DSI_LANE_4,      // MIPnlMipiDsiLaneMode_e enLaneNum;
    E_MI_PNL_MIPI_DSI_RGB565,      // MIPnlMipiDsiFormat_e enFormat;
    E_MI_PNL_MIPI_DSI_SYNC_PULSE,  // MIPnlMipiDsiCtrlMode_e enCtrl;

    ILI9881D_CMD,
    sizeof(ILI9881D_CMD),
    1, 0x01AF, 0x01B9, 0x80D2, 7,
};


